# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
      - 'main'

pr:
  branches:
    include:
      - 'main'

pool:
  vmImage: 'ubuntu-latest'

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

steps:
  - checkout: self
    persistCredentials: true

  - script: docker run --rm -v $(pwd):/work:ro -w /work tmaier/markdown-spellcheck:latest --report "**/*.md"
    displayName: 'Check Spelling'

  - script: |
      shopt -s globstar
      echo **/*.md | xargs -n1 docker run --rm -v $(pwd):/work:ro -w /work robertbeal/markdown-link-checker
    displayName: 'Check Links'

  - script: |
      echo "##vso[task.setvariable variable=releaseVersion]$(git describe --tags --exact-match $(Build.SourceVersion) 2>/dev/null)"
    displayName: 'Get Release Version'

  - task: GitHubRelease@0
    displayName: 'Create Release'
    condition: and(succeeded(), eq(variables.isMain, true), eq(variables.releaseVersion, ''))
    inputs:
      gitHubConnection: 'github.com_slawekzachcial'
      tag: $(Build.BuildNumber)
      tagSource: manual

  # `releaseVersion` either already has value coming from tag or is set to BuildNumber
  # so that proper commit message can be specified in gh-pages branch.
  - script: |
      echo "##vso[task.setvariable variable=releaseVersion]$(Build.BuildNumber)"
    displayName: 'Set Release Version'
    condition: and(succeeded(), eq(variables.isMain, true), eq(variables.releaseVersion, ''))

  - script: |
      git config user.email slawekzachcial.pipelines-azure@dev.azure.com
      git config user.name 'Azure Pipelines'
      git status
      git switch gh-pages \
      && git restore --source $(Build.SourceVersion) README.md \
      && { git diff --quiet || { git commit -am "Deploy new release: $(releaseVersion)" && git push; } } \
      && git switch --detach  -
    displayName: 'Deploy Release'
    condition: and(succeeded(), eq(variables.isMain, true))
